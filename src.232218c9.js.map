{"version":3,"sources":["src/settings.js","src/partials/Board.js","src/partials/Paddle.js","src/partials/Ball.js","src/partials/Score.js","src/partials/Win.js","src/partials/Game.js","src/index.js"],"names":["SVG_NS","PADDLE_WIDTH","PADDLE_HEIGHT","BOARD_GAP","SPEED","RADIUS","TEXT_SIZE","KEYS","p1up","p1down","p2up","p2down","pause","Board","width","height","svg","rect","document","createElementNS","setAttributeNS","appendChild","line","Paddle","boardHeight","paddleWidth","paddleHeight","initialX","initialY","keyUp","keyDown","x","y","score","speed","addEventListener","event","key","moveUp","moveDown","Math","max","console","log","min","walls","left","top","right","bottom","Ball","boardWidth","radius","direction","ping","Audio","audioFile","color","reset","vx","vy","floor","random","abs","hitsTop","hitsBottom","player1","player2","increaseScore","num","p2","getCoordinates","play","p1","circle","wallCollision","goalCollision","paddleCollision","xPosition","yPosition","text","textContent","Win","Game","element","paused","gameElement","getElementById","board","boardMid","paddle1","paddle2Gap","paddle2","ball","score1","Score","score2","win","keypressed","witchkey","innerHTML","render","getScore","game","gameLoop","requestAnimationFrame"],"mappings":"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","file":"src.232218c9.js","sourceRoot":"..","sourcesContent":["export const SVG_NS = \"http://www.w3.org/2000/svg\";\n\n// export const PADDLE_WIDTH = 8, \n//              PADDLE_HEIGHT = 56, \n//              BOARD_GAP = 10,\n//              SPEED = 10,\n//              RADIUS = 8,\n//              TEXT_SIZE = 30;\n\nexport const PADDLE_WIDTH = 12,\n    PADDLE_HEIGHT = 130,\n    BOARD_GAP = 12,\n    SPEED = 25,\n    RADIUS = 14,\n    TEXT_SIZE = 30;\n\n\n\nexport const KEYS = {\n    p1up: 'a',\n    p1down: 'z',\n    p2up: 'ArrowUp',\n    p2down: 'ArrowDown',\n    pause: ' '\n};","import {\n  SVG_NS\n} from '../settings';\n\nexport default class Board {\n  constructor(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n  render(svg) {\n    let rect = document.createElementNS(SVG_NS, 'rect');\n    rect.setAttributeNS(null, \"width\", this.width);\n    rect.setAttributeNS(null, \"height\", this.height);\n    rect.setAttributeNS(null, \"fill\", \"red\");\n    rect.setAttributeNS(null, \"x\", 0);\n    rect.setAttributeNS(null, \"y\", 0);\n\n    rect.setAttributeNS(null, \"rx\", 15);\n    rect.setAttributeNS(null, \"ry\", 15);\n\n    svg.appendChild(rect);\n    let line = document.createElementNS(SVG_NS, 'line');\n    line.setAttributeNS(null, \"x1\", this.width / 2);\n    line.setAttributeNS(null, \"y1\", 0);\n    line.setAttributeNS(null, \"x2\", this.width / 2);\n    line.setAttributeNS(null, \"y2\", this.height);\n    line.setAttributeNS(null, \"stroke\", \"white\");\n    line.setAttributeNS(null, \"stroke-width\", 4);\n    line.setAttributeNS(null, \"stroke-dasharray\", \"18 18\");\n    svg.appendChild(line);\n\n\n  }\n\n}","import {\n    SVG_NS,\n    SPEED\n} from '../settings';\n\nexport default class Paddle {\n    constructor(boardHeight, paddleWidth, paddleHeight, initialX, initialY, keyUp, keyDown) {\n        this.boardHeight = boardHeight;\n        this.paddleWidth = paddleWidth;\n        this.paddleHeight = paddleHeight;\n        this.x = initialX;\n        this.y = initialY;\n        this.score = 0;\n        this.speed = SPEED;\n        document.addEventListener(\"keydown\", event => {\n            switch (event.key) {\n                case keyUp:\n                    this.moveUp();\n                    break;\n                case keyDown:\n                    this.moveDown();\n                    break;\n            }\n        });\n    }\n\n    increaseScore() {\n        this.score++;\n    }\n    getScore() {\n        return this.score;\n    }\n    \n    moveUp() {\n        this.y = Math.max(0, this.y - this.speed);\n    }\n\n    moveDown() {\n        console.log(this.y, this.boardHeight);\n        this.y = Math.min(this.boardHeight - this.paddleHeight, this.y + this.speed);\n    }\n\n    getCoordinates() {\n        const walls = {\n            left: this.x,\n            top: this.y,\n            right: this.x + this.paddleWidth,\n            bottom: this.y + this.paddleHeight\n        }\n        return walls;\n    }\n\n\n\n    render(svg) {\n        let rect = document.createElementNS(SVG_NS, 'rect');\n        rect.setAttributeNS(null, \"width\", this.paddleWidth);\n        rect.setAttributeNS(null, \"height\", this.paddleHeight);\n        rect.setAttributeNS(null, \"fill\", \"white\");\n        rect.setAttributeNS(null, \"x\", this.x);\n        rect.setAttributeNS(null, \"y\", this.y);\n        svg.appendChild(rect);\n\n    }\n\n}","import { SVG_NS} from '../settings';\nimport audioFile from '../../public/sounds/pong-01.wav';\nexport default class Ball {\n  constructor(boardWidth, boardHeight, radius) {\n    this.boardWidth = boardWidth;\n    this.boardHeight = boardHeight;\n    this.radius = radius;\n    this.direction = 1;\n    this.ping = new Audio(audioFile);\n    this.color = \"#fff\";\n           \n    this.reset();\n  }\n  reset() {\n      this.x = this.boardWidth/2;\n      this.y = this.boardHeight/2;\n        this.vx = 0;\n        this.vy = 0;\n      while (this.vy === 0){\n        this.vy = Math.floor(Math.random() * 40 - 5);\n      }\n     \n    //   this.vx = Math.floor(Math.random() * 10 - 5);\n    this.vx = this.direction * (6 - Math.abs(this.vy));\n  }\n\n  \n\n\n\n  wallCollision() {\n      const hitsTop = this.y - this.radius <= 0;\n      const hitsBottom = this.y + this.radius >= this.boardHeight;\n      if (hitsTop || hitsBottom)  {\n          this.vy = this.vy * -1;\n      }\n    }\n\n    goalCollision(player1, player2) {\n        if(this.x <= 0) {\n            player2.increaseScore();\n            this.direction = this.direction * -1;\n            this.reset();\n        } else if (this.x >= this.boardWidth){\n            player1.increaseScore();\n            this.direction = this.direction * -1;\n            this.reset();\n        }\n\n      \n    }\n\n    random(min, max) {\n      let num = Math.floor(Math.random() * (max - min + 1)) + min;\n      return num;\n\n    }\n\n  paddleCollision(player1, player2) {\n      \n      if (this.vx > 0) {\n          const p2 = player2.getCoordinates();\n          //check for hit with player2\n          if(this.x + this.radius >= p2.left && \n            this.y >= p2.top && \n            this.y <= p2.bottom) {\n              this.vx = this.vx * -1;\n              this.ping.play();\n              this.color = 'rgb(' + this.random(0,255) + ',' + this.random(0,255) + ',' + this.random(0,255) +')';\n\n          }\n\n\n\n      } else {\n        const p1 = player1.getCoordinates();\n          //check for hit with player2\n          if(this.x - this.radius <= p1.right && \n            this.y >= p1.top && \n            this.y <= p1.bottom){\n              this.vx = this.vx * -1;\n              this.ping.play();\n              this.color = 'rgb(' + this.random(0,255) + ',' + this.random(0,255) + ',' + this.random(0,255) +')';\n          }\n      }\n  }\n\n  render(svg, player1, player2) {\n    let circle = document.createElementNS(SVG_NS, 'circle');\n    circle.setAttributeNS(null, \"fill\", this.color);\n    circle.setAttributeNS(null, \"cx\", this.x);\n    circle.setAttributeNS(null, \"cy\", this.y);\n    circle.setAttributeNS(null, \"r\", this.radius);\n    this.x = this.x + this.vx;\n    this.y = this.y + this.vy;\n    this.wallCollision();\n    this.goalCollision(player1, player2);\n    this.paddleCollision(player1, player2)\n    svg.appendChild(circle);\n    \n  }\n\n}","import {\n  SVG_NS,\n  TEXT_SIZE\n} from '../settings';\n\nexport default class Board {\n  constructor(xPosition, yPosition) {\n    this.x = xPosition;\n    this.y = yPosition;\n  }\n  render(svg, score) {\n    console.log(\"This\", score)\n    let text = document.createElementNS(SVG_NS, 'text');\n    text.setAttributeNS(null, \"fill\", \"#fff\");\n    text.setAttributeNS(null, \"font-size\", TEXT_SIZE);\n    text.setAttributeNS(null, \"font-family\", \"'Silkscreen web' , monotype\");\n    text.setAttributeNS(null, \"x\", this.x);\n    text.setAttributeNS(null, \"y\", this.y);\n    text.textContent = score;\n    svg.appendChild(text);\n  }\n\n  \n}\n\n","import {\n    SVG_NS,\n    TEXT_SIZE\n} from '../settings';\n\nexport default class Win {\n    constructor(xPosition, yPosition) {\n        this.x = xPosition;\n        this.y = yPosition;\n    }\n    render(svg) {\n        console.log(\"This\")\n        let text = document.createElementNS(SVG_NS, 'text');\n        text.setAttributeNS(null, \"fill\", \"#fff\");\n        text.setAttributeNS(null, \"font-size\", TEXT_SIZE);\n        text.setAttributeNS(null, \"font-family\", \"'Silkscreen web' , monotype\");\n        text.setAttributeNS(null, \"x\", this.x);\n        text.setAttributeNS(null, \"y\", this.y);\n        text.textContent = \"Game Over!\";\n        svg.appendChild(text);\n    }\n\n}","import {\n  SVG_NS,\n  PADDLE_WIDTH,\n  PADDLE_HEIGHT,\n  BOARD_GAP,\n  KEYS,\n  RADIUS\n} from '../settings';\nimport Board from './Board';\nimport Paddle from './Paddle';\nimport Ball from './Ball';\nimport Score from './Score';\nimport Win from './Win';\n\nexport default class Game {\n  constructor(element, width, height) {\n    this.element = element;\n    this.width = width;\n    this.height = height;\n    this.paused = false;\n\n    this.gameElement = document.getElementById(this.element);\n    this.board = new Board(this.width, this.height);\n    const boardMid = (this.height - PADDLE_HEIGHT) / 2;\n    this.paddle1 = new Paddle(this.height, PADDLE_WIDTH, PADDLE_HEIGHT, BOARD_GAP, boardMid, KEYS.p1up, KEYS.p1down);\n    const paddle2Gap = this.width - BOARD_GAP - PADDLE_WIDTH;\n    this.paddle2 = new Paddle(this.height, PADDLE_WIDTH, PADDLE_HEIGHT, paddle2Gap, boardMid, KEYS.p2up, KEYS.p2down);\n    this.ball = new Ball(this.width, this.height, RADIUS);\n    this.score1 = new Score(this.width / 2 - 50, 30);\n    this.score2 = new Score(this.width / 2 + 25, 30);\n    this.win = new Win(this.width / 2 - 93, this.height / 2);\n\n    // this.keypressed = false;\n    // this.witchkey = \"\";\n\n\n    document.addEventListener(\"keyup\", (event) => {\n      this.keypressed = false;\n      this.witchkey = event.key;\n\n\n    });\n\n    document.addEventListener(\"keydown\", (event) => {\n      this.keypressed = true;\n      this.witchkey = event.key;\n      // console.log(event.key);\n      if (event.key === KEYS.pause) {\n        this.paused = !this.paused;\n      }\n\n    });\n    // Other code goes here...\n  }\n\n  render() {\n    if (this.paused) {\n      return;\n    }\n    // More code goes here....\n    this.gameElement.innerHTML = '';\n    let svg = document.createElementNS(SVG_NS, 'svg');\n    svg.setAttributeNS(null, \"width\", this.width);\n    svg.setAttributeNS(null, \"height\", this.height);\n    svg.setAttributeNS(null, \"viewBox\", `0 0 ${this.width} ${this.height}`);\n    this.gameElement.appendChild(svg);\n    this.board.render(svg);\n    this.paddle1.render(svg);\n    this.paddle2.render(svg);\n    this.ball.render(svg, this.paddle1, this.paddle2);\n    this.score1.render(svg, this.paddle1.getScore());\n    this.score2.render(svg, this.paddle2.getScore());\n    if (this.paddle1.getScore() >= 2 || this.paddle2.getScore() >= 2) {\n      this.paused = true;\n      this.win.render(svg)\n    }\n  }\n}","import './styles/game.css';\nimport Game from './partials/Game';\n\n// create a game instance\n// const game = new Game('game', 512, 256);\n\nconst game = new Game('game', 1000, 600);\n\n\n(function gameLoop() {\n  game.render();\n  requestAnimationFrame(gameLoop);\n})();\n"]}